import React, { useState, useEffect } from "react";
import { useDispatch } from "react-redux";
import { clearCart } from "../../redux/cartSlice";
import { useNavigate, useLocation } from "react-router-dom";
import "./CheckoutPage.css";
import { API_URL } from "../../utils/lib";

export default function CheckoutPage() {
    const access_token = localStorage.getItem("access_token");
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const location = useLocation();

  // ‚úÖ L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ CartPage
  const { selectedItems } = location.state || { selectedItems: [] };

  // ‚úÖ ƒê·ªãa ch·ªâ m·∫∑c ƒë·ªãnh t·ª´ th√¥ng tin user (v√≠ d·ª• l·∫•y t·ª´ localStorage)
  const user = JSON.parse(localStorage.getItem("user")) || {};
  const [address, setAddress] = useState(user.address || "");
  const [note, setNote] = useState("");
  const [paymentMethod, setPaymentMethod] = useState("cash");

  // üü¢ T√≠nh t·ªïng ti·ªÅn
  const totalAmount = selectedItems.reduce(
    (sum, item) => sum + item.price * item.quantity,
    0
  );

  // üü¢ Submit ƒë∆°n h√†ng
  const handleSubmit = async () => {
    if (!address) {
      alert("Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng!");
      return;
    }

    const orderData = {
      user_id: user.id, // TODO: thay b·∫±ng user_id t·ª´ Redux/Auth
      shipping_address: address,
      note,
      payment_method: paymentMethod,
      total_amount: totalAmount,
      order_details: selectedItems.map((item) => ({
        product_id: item.id,
        quantity: item.quantity,
        unit_price: item.price,
        total_price: item.price * item.quantity,
      })),
    };
    console.log("üìù D·ªØ li·ªáu ƒë∆°n h√†ng:", orderData);
    try {
      const res = await fetch(API_URL + "orders", {
        method: "POST",
        headers: { "Content-Type": "application/json", Authorization: `Bearer ${access_token}` },
        body: JSON.stringify(orderData),
      });

      if (!res.ok) throw new Error("ƒê·∫∑t h√†ng th·∫•t b·∫°i");

      const data = await res.json();
      console.log("‚úÖ ƒê·∫∑t h√†ng th√†nh c√¥ng:", data);

      
      navigate("/orders");
    } catch (err) {
      console.error("‚ùå L·ªói khi ƒë·∫∑t h√†ng:", err);
    }
  };

  return (
    <div className="checkout-container">
      <h2 className="checkout-title">Thanh to√°n</h2>

      {/* B·∫£ng s·∫£n ph·∫©m */}
      <table className="checkout-table">
        <thead>
          <tr>
            <th>H√¨nh ·∫£nh</th>
            <th>S·∫£n ph·∫©m</th>
            <th>Gi√°</th>
            <th>S·ªë l∆∞·ª£ng</th>
            <th>Th√†nh ti·ªÅn</th>
          </tr>
        </thead>
        <tbody>
          {selectedItems.map((item) => (
            <tr key={item.id}>
              <td>
                <img
                  src={item.image_path}
                  alt={item.name}
                  className="checkout-img"
                />
              </td>
              <td>{item.name}</td>
              <td>{item.price.toLocaleString()} ƒë</td>
              <td>{item.quantity}</td>
              <td>{(item.price * item.quantity).toLocaleString()} ƒë</td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* T·ªïng ti·ªÅn */}
      <div className="checkout-total">
        <h3>T·ªïng c·ªông: {totalAmount.toLocaleString()} ƒë</h3>
      </div>

      {/* Form th√¥ng tin giao h√†ng */}
      <div className="checkout-form">
        <label>
          ƒê·ªãa ch·ªâ giao h√†ng:
          <input
            type="text"
            value={address}
            onChange={(e) => setAddress(e.target.value)}
            placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ..."
          />
        </label>

        <label>
          Ghi ch√∫:
          <textarea
            value={note}
            onChange={(e) => setNote(e.target.value)}
            placeholder="V√≠ d·ª•: Giao ngo√†i gi·ªù h√†nh ch√≠nh"
          />
        </label>

        <label>
          Ph∆∞∆°ng th·ª©c thanh to√°n:
          <select
            value={paymentMethod}
            onChange={(e) => setPaymentMethod(e.target.value)}
          >
            <option value="cash">Ti·ªÅn m·∫∑t</option>
            <option value="credit_card">Th·∫ª t√≠n d·ª•ng</option>
            <option value="momo">Momo</option>
            <option value="zalopay">ZaloPay</option>
          </select>
        </label>
      </div>

      {/* N√∫t x√°c nh·∫≠n */}
      <button className="checkout-btn" onClick={handleSubmit}>
        X√°c nh·∫≠n ƒë·∫∑t h√†ng
      </button>
    </div>
  );
}
