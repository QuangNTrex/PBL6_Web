import cv2
import time
import imagezmq
import numpy as np
import zmq

# --- C·∫§U H√åNH ---
SERVER_IP = '127.0.0.1' 
SERVER_PORT = 5555
SERVER_URL = f"tcp://{SERVER_IP}:{SERVER_PORT}"
SENDER_NAME = 'Client_PC'

# --- H√ÄM T·∫†O K·∫æT N·ªêI ---
def create_sender():
    """T·∫°o k·∫øt n·ªëi m·ªõi t·ªõi server, th·ª≠ li√™n t·ª•c cho t·ªõi khi th√†nh c√¥ng."""
    while True:
        try:
            sender = imagezmq.ImageSender(connect_to=SERVER_URL)
            print(f"‚úÖ K·∫øt n·ªëi th√†nh c√¥ng t·ªõi server: {SERVER_URL}")
            return sender
        except zmq.error.ZMQError as e:
            print(f"‚ö†Ô∏è L·ªói khi k·∫øt n·ªëi t·ªõi server: {e}. Th·ª≠ l·∫°i sau 5 gi√¢y...")
            time.sleep(5)

# --- H√ÄM STREAM ·∫¢NH ---
def stream_images():
    """V√≤ng l·∫∑p ƒë·ªçc v√† g·ª≠i ·∫£nh, t·ª± ƒë·ªông k·∫øt n·ªëi l·∫°i khi m·∫•t li√™n l·∫°c."""
    camera = cv2.VideoCapture(0)
    if not camera.isOpened():
        print("‚ùå L·ªói: Kh√¥ng th·ªÉ truy c·∫≠p camera.")
        return

    camera.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
    camera.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
    time.sleep(2.0)

    sender = create_sender()
    print("üöÄ B·∫Øt ƒë·∫ßu g·ª≠i lu·ªìng ·∫£nh...")

    while True:
        ret, frame = camera.read()
        if not ret:
            print("‚ö†Ô∏è L·ªói: Kh√¥ng th·ªÉ ƒë·ªçc frame t·ª´ camera.")
            time.sleep(1)
            continue

        # N√©n ·∫£nh JPEG
        encode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 90]
        ret, jpg_buffer = cv2.imencode('.jpg', frame, encode_param)
        jpg_bytes = jpg_buffer.tobytes()

        try:
            # G·ª≠i ·∫£nh ƒë·∫øn server
            reply = sender.send_jpg(SENDER_NAME, jpg_bytes)
            # print(f"Server ph·∫£n h·ªìi: {reply.decode('utf-8')}")

        except (zmq.error.ZMQError, zmq.error.Again, BrokenPipeError, TimeoutError) as e:
            print(f"‚ö†Ô∏è M·∫•t k·∫øt n·ªëi t·ªõi server ({e}). ƒêang th·ª≠ k·∫øt n·ªëi l·∫°i...")
            try:
                sender.close()
            except Exception:
                pass
            sender = create_sender()  # K·∫øt n·ªëi l·∫°i v√† ti·∫øp t·ª•c stream
            continue

        # Hi·ªÉn th·ªã ·∫£nh ƒë·ªÉ debug
        cv2.imshow('Image Client', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            print("üõë D·ª´ng client theo y√™u c·∫ßu ng∆∞·ªùi d√πng.")
            break

    # --- D·ªåN D·∫∏P ---
    camera.release()
    cv2.destroyAllWindows()
    try:
        sender.close()
    except Exception:
        pass
    print("‚úÖ Client ƒë√£ ƒë√≥ng k·∫øt n·ªëi.")

# --- CH·∫†Y CH∆Ø∆†NG TR√åNH ---
if __name__ == "__main__":
    while True:
        try:
            stream_images()
            break  # Ch·∫°y xong th√¨ tho√°t
        except Exception as e:
            print(f"‚ö†Ô∏è L·ªói b·∫•t ng·ªù trong qu√° tr√¨nh stream: {e}")
            print("üîÅ T·ª± ƒë·ªông kh·ªüi ƒë·ªông l·∫°i sau 5 gi√¢y...")
            time.sleep(5)
